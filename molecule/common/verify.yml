---
- name: verify

  hosts: localhost

  gather_facts: false

  tasks:

    - name: print kubeconfig debug info
      debug:
        msg: "using kubeconfig at {{ kind_kubeconfig }}"

    - name: set kind deployment target
      ansible.builtin.set_fact:
        _kind_bin: "{{ _tmpdir }}/kind"

    - name: query kind releases
      ansible.builtin.uri:
        url: "https://api.github.com/repos/kubernetes-sigs/kind/releases/latest"
      register: kind_release_query

    - name: set kind release target
      ansible.builtin.set_fact:
        kind_release: "{{ kind_release_query.json.tag_name }}"

    - name: download kind executable
      ansible.builtin.get_url:
        url: "https://kind.sigs.k8s.io/dl/{{ kind_release }}/kind-linux-amd64"
        dest: "{{ _kind_bin }}"
        mode: 0777
      changed_when: false

    - name: list kind clusters
      ansible.builtin.command: >-
        {{ _kind_bin }} get clusters -q
      register: kind_cluster_query
      changed_when: false

    - name: check kind cluster state
      ansible.builtin.fail:
        msg: "kind cluster {{ kind_cluster_name }} not found"
      when: kind_cluster_name not in kind_cluster_query.stdout_lines

    - name: list cluster nodes
      ansible.builtin.shell: >-
        KUBECONFIG={{ kind_kubeconfig }} kubectl get nodes --no-headers
      register: kind_node_query

    - name: check kubectl command
      ansible.builtin.fail:
        msg: "kubectl call to cluster failed"
      when: kind_node_query is failed

    - name: check kind node
      ansible.builtin.fail:
        msg: "expected {{ kind_target_nodes }} cluster nodes, got {{ kind_node_num }}"
      vars:
        kind_target_nodes: "{{ kind_nodes }}"
        kind_node_num: "{{ kind_node_query.stdout_lines | length }}"
      when: kind_node_num | int != kind_target_nodes | int

    - block:

        - name: pull test image
          community.docker.docker_image:
            name: "kindest/node:{{ lookup('ansible.builtin.env', 'KIND_IMAGE') }}"
            source: pull

        - name: tag and push to local registry
          community.docker.docker_image:
            name: kindest/node
            repository: "{{ kind_registry_hostname | default('localhost') }}:{{ kind_registry_port }}/kindest/node"
            tag: "{{ lookup('ansible.builtin.env', 'KIND_IMAGE') }}"
            push: true
            source: local

      when: kind_registry_deploy | bool
