---
- name: Verify
  hosts: localhost
  gather_facts: true
  tasks:
    - name: Create tempdir
      ansible.builtin.tempfile:
        state: directory
        prefix: kind
      register: kind_tmpdir
      changed_when: false

    - name: Print debug info
      ansible.builtin.debug:
        msg: "using kubeconfig at {{ kind_kubeconfig }}"

    - name: Download Kind binary
      block:
        - name: Set target Kind release
          ansible.builtin.set_fact:
            _kind_release_tag: "{{ (kind_release_tag in ['latest', '']) | ternary(_latest, kind_release_tag) }}"
          vars:
            _uri: "https://api.github.com/repos/kubernetes-sigs/kind/releases/latest"
            _query: "{{ lookup('ansible.builtin.url', _uri, split_lines=False) | from_json }}"
            _latest: "{{ _query.json.tag_name }}"

        - name: Debug Kind release and tag
          ansible.builtin.debug:
            msg: "Using kind release '{{ _kind_release_tag }}', image 'kindest/node:{{ kind_image_tag }}'"

        - name: Download Kind executable
          ansible.builtin.get_url:
            url: "https://kind.sigs.k8s.io/dl/{{ _kind_release_tag }}/kind-{{ kind_release_family }}-{{ kind_release_architecture }}"
            dest: "{{ _kind_bin }}"
            mode: "u=rwx,og=rx"
          changed_when: false

    - name: List Kind clusters
      ansible.builtin.command: >-
        {{ _kind_bin }} get clusters -q
      register: kind_cluster_query
      changed_when: false

    - name: Check Kind cluster state
      ansible.builtin.assert:
        that: kind_cluster_name in kind_cluster_query.stdout_lines
        fail_msg: "kind cluster {{ kind_cluster_name }} not found"

    - name: List cluster nodes
      ansible.builtin.shell: >-
        KUBECONFIG={{ kind_kubeconfig }} kubectl get nodes --no-headers
      register: kind_node_query

    - name: Verify Kubectl node query execution
      ansible.builtin.assert:
        that: kind_node_query is succeeded
        fail_msg: "kubectl call to cluster failed"

    - name: Check Kind node
      ansible.builtin.assert:
        that: (kind_node_num | int) == (kind_target_nodes | int)
        fail_msg: "expected {{ kind_target_nodes }} cluster nodes, got {{ kind_node_num }}"
      vars:
        kind_target_nodes: "{{ kind_nodes }}"
        kind_node_num: "{{ kind_node_query.stdout_lines | length }}"

    - name: Deploy Kind image to local repository
      when: kind_registry_deploy | bool
      block:
        - name: Pull Kind image
          community.docker.docker_image:
            name: "kindest/node:{{ lookup('ansible.builtin.env', 'KIND_IMAGE') }}"
            source: pull

        - name: Tag and push to local registry
          community.docker.docker_image:
            name: kindest/node
            repository: "{{ kind_registry_hostname | default('localhost') }}:{{ kind_registry_port }}/kindest/node"
            tag: "{{ lookup('ansible.builtin.env', 'KIND_IMAGE') }}"
            push: true
            source: local

    - name: Destroy tempdir
      ansible.builtin.file:
        state: absent
        path: "{{ kind_tmpdir.path }}"
      changed_when: false
